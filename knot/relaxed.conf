net.listen('10.0.53.3')
log_level('info')
log_target('stderr')

-- https://gitlab.nic.cz/knot/knot-resolver/-/merge_requests/889#note_126653

modules.unload('priming') -- annoying log burst
cache.open(100*MB)
cache.clear() -- not required; just practical for testing changes
local ffi = require('ffi')
local c = kres.context().cache

-- fpdns.auth
ns_name = todname('fpdns.auth')
local ns_addr = '\10\0\53\6'
local ttl = 2^30 -- 34 years; but cache.max_ttl() will cut it down
local rr = kres.rrset(ns_name, kres.type.A, kres.class.IN, ttl)
assert(rr:add_rdata(ns_addr, #ns_addr))
assert(c:insert(rr, nil, ffi.C.KR_RANK_SECURE + ffi.C.KR_RANK_AUTH))
rr_ns = kres.rrset(todname('fpdns.auth'), kres.type.NS, kres.class.IN, ttl)
assert(rr_ns:add_rdata(ns_name, #ns_name))
assert(c:insert(rr_ns, nil, ffi.C.KR_RANK_INSECURE + ffi.C.KR_RANK_AUTH))

-- oldqmintest.auth
ns_name = todname('oldqmintest.auth')
local ns_addr = '\10\0\53\7'
local ttl = 2^30 -- 34 years; but cache.max_ttl() will cut it down
local rr = kres.rrset(ns_name, kres.type.A, kres.class.IN, ttl)
assert(rr:add_rdata(ns_addr, #ns_addr))
assert(c:insert(rr, nil, ffi.C.KR_RANK_SECURE + ffi.C.KR_RANK_AUTH))
rr_ns = kres.rrset(todname('oldqmintest.auth'), kres.type.NS, kres.class.IN, ttl)
assert(rr_ns:add_rdata(ns_name, #ns_name))
assert(c:insert(rr_ns, nil, ffi.C.KR_RANK_INSECURE + ffi.C.KR_RANK_AUTH))

-- newqmintest.auth
ns_name = todname('newqmintest.auth')
local ns_addr = '\10\0\53\9'
local ttl = 2^30 -- 34 years; but cache.max_ttl() will cut it down
local rr = kres.rrset(ns_name, kres.type.A, kres.class.IN, ttl)
assert(rr:add_rdata(ns_addr, #ns_addr))
assert(c:insert(rr, nil, ffi.C.KR_RANK_SECURE + ffi.C.KR_RANK_AUTH))
rr_ns = kres.rrset(todname('newqmintest.auth'), kres.type.NS, kres.class.IN, ttl)
assert(rr_ns:add_rdata(ns_name, #ns_name))
assert(c:insert(rr_ns, nil, ffi.C.KR_RANK_INSECURE + ffi.C.KR_RANK_AUTH))

c:commit()

